start: data? text

data: ".data" (mem_label? label? decl? _NL)*          -> data_segm

?decl: ".word" SIGNED_INT                   -> create_word
    | ".half" SIGNED_INT                    -> create_half
    | ".byte" SIGNED_INT                    -> create_byte
    | ".asciiz" ESCAPED_STRING              -> create_asciiz
    | ".space" INT                          -> create_space

text: ".text" (mem_label? label? instr? _NL)*         -> text_segm

?instr: mnemonic args                       -> create_instr
?mnemonic: NAME

args: (arg ("," arg)*)?

?arg: reg
    | offset_reg
    | label_name
    | constant

?offset_reg: SIGNED_INT "(" reg ")"         -> offset_reg
?reg: "$" INT                               -> numeric_reg
    | "$" /\w[\w\d]+/                       -> named_reg

?constant: /'.'/                            -> char_const
    | HEX_INT                               -> hex_const
    | SIGNED_INT                            -> integer_const

HEX_INT.2: /0x[0-9a-fA-F]+/

?label: label_name ":"                      -> create_label
?label_name: NAME                           -> create_label_ref

?mem_label: "@" HEX_INT                     -> create_mem_label

%import common.CNAME -> NAME
%import common.WS_INLINE
%import common.ESCAPED_STRING
%import common.SIGNED_INT
%import common.INT
%import common.NEWLINE
%ignore WS_INLINE

_NL: NEWLINE

COMMENT: "#" /[^\n]*/
    | ";" /[^\n]*/

%ignore COMMENT